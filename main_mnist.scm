(use rfc.http)
(use text.csv)
(use file.util)

(define (download-mnist :key type [type 'both])
  (for-each (lambda (csv-name)
              (receive (status header body)
                       (http-get "pjreddie.com" (string-join (list "/media/files/" csv-name) ""))
                       (with-output-to-file csv-name
                                            (lambda () (display body)))))
            (if (eq? type 'train)
              (list "mnist_train.csv")
              (if (eq? type 'train)
                (list "mnist_test.csv")
                (list "mnist_train.csv" "mnist_test.csv"))
              )))

(define (main args)
  (cond ((not (file-is-readable? "./mnist_train.csv"))
         (print "Downloading mnist_train.csv ...")
         (download-mnist :type 'train)
         (print "Finished.")))
  (cond ((not (file-is-readable? "./mnist_test.csv"))
         (print "Downloading mnist_test.csv ...")
         (download-mnist :type 'test)
         (print "Finished."))) 0)
